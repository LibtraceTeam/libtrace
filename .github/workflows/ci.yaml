name: CI

on: [push, pull_request]
jobs:
  clang-format:
    name: Clang Format
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install clang-format
      run: sudo apt-get install clang-format
    - name: Download git-clang-format
      run: wget https://raw.githubusercontent.com/llvm-mirror/clang/master/tools/clang-format/git-clang-format
    - name: Install git-clang-format
      run: sudo install -t /bin git-clang-format
    - name: Fetch origin ${{ github.base_ref }}
      run: git fetch --no-tags --prune --depth=1 origin ${{ github.base_ref }}
    - name: clang-format
      run: git clang-format origin/${{ github.base_ref }}
    - name: diff
      run: git diff --exit-code
  run-tests-ubuntu:
    name: Run Tests - Ubuntu 20.04
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        path: libtrace
        submodules: recursive
    - name: Install Dependencies
      run: |
        sudo apt update
        sudo apt-get -y install flex bison libpcap0.8-dev libtool pkgconf autoconf automake m4 gcc clang llvm gcc-multilib libelf-dev git dpdk-dev 
    - name: Install PF_RING
      run: |
        sudo apt-get -y install software-properties-common wget
        sudo add-apt-repository -y universe
        wget https://packages.ntop.org/apt-stable/20.04/all/apt-ntop-stable.deb
        sudo apt-get -y install ./apt-ntop-stable.deb
        sudo apt-get update
        sudo apt-get -y install pfring
        sudo ls /usr/include
        sudo pf_ringcfg --list-interfaces
    - name: Checkout DAG
      uses: actions/checkout@v2
      with:
        path: dag
        repository: wanduow/dag
        token: ${{ secrets.DAG_WANDUOW }}
    - name: Build DAG
      run: |
        cd dag
        sudo make KSRC=/lib/modules/$(uname -r)/build
        sudo insmod dag.ko
        sudo lsmod
    - name: Checkout Libbpf
      uses: actions/checkout@v2
      with:
        path: libbpf
        repository: libbpf/libbpf
    - name: Build/Install Libbpf
      run: |
        cd libbpf/src
        make
        sudo make install
        echo "/usr/lib64" | sudo tee -a /etc/ld.so.conf.d/lib64.conf
        sudo ldconfig
    - name: Checkout Libtrace
      uses: actions/checkout@v2
      with:
        path: libtrace
        submodules: recursive
    - name: Build/Install Wandio
      run: |
        cd libtrace/wandio
        ./bootstrap.sh
        ./configure
        make
        sudo make install
        sudo ldconfig
    - name: Build/Install Libtrace
      run: |
        cd libtrace
        ./bootstrap.sh
        ./configure --with-dpdk --with-pfring --with-xdp
        make
        sudo make install
    - name: Build Tests
      run: cd libtrace/test; make address-san
    - name: Run do-tests.sh
      run: cd libtrace/test; ./do-tests.sh
    - name: Run do-tests-parallel.sh
      run: cd libtrace/test; ./do-tests-parallel.sh
    - name: Run do-tests-datastruct.sh
      run: cd libtrace/test; ./do-tests-datastruct.sh
    - name: Run do-live-tests.sh
      run: cd libtrace/test; sudo ./do-live-tests.sh pcap int ring pfring dpdk
  run-tests-macos:
    name: Run Tests - MacOS Catalina 10.15
    runs-on: macos-10.15
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Install Dependencies
      run: |
        brew install flex bison libpcap libtool autoconf automake m4 gcc
    - name: Build/Install Wandio
      run: |
        cd wandio
        ./bootstrap.sh
        ./configure
        make
        sudo make install
    - name: Build/Install Libtrace
      run: |
        ./bootstrap.sh
        ./configure
        make
        sudo make install
    - name: Build Tests
      run: cd test; make
    - name: Run do-tests.sh
      run: cd test; ./do-tests.sh
    - name: Run do-tests-parallel.sh
      run: cd test; ./do-tests-parallel.sh
    - name: Run do-tests-datastruct.sh
      run: cd test; ./do-tests-datastruct.sh
