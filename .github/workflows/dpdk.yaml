name: DPDK Build
on:
  push:
    paths:
    - 'configure.in'
    - 'lib/format_dpdk.c'
    - 'lib/format_dpdk.h'
    - 'lib/dpdk_libtrace.mk'
    - 'lib/format_dpdkndag.c'
    - 'test/do-test-build-dpdk.sh'
    - 'test/do-test-build-dpdk-live.sh'
    - '.github/workflows/dpdk.yaml'
  pull_request:
    paths:
    - 'configure.in'
    - 'lib/format_dpdk.c'
    - 'lib/format_dpdk.h'
    - 'lib/dpdk_libtrace.mk'
    - 'lib/format_dpdkndag.c'
    - 'test/do-test-build-dpdk.sh'
    - 'test/do-test-build-dpdk-live.sh'
    - '.github/workflows/dpdk.yaml'
  workflow_dispatch:
jobs:
  build-dpdk:
    name: Build ${{ matrix.dpdk_version }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-18.04, ubuntu-16.04]
        dpdk_version [dpdk-20.11, dpdk-20.02, dpdk-18.02.1]
        exclude:
          - os: ubuntu-18.04
            dpdk_version: dpdk-20.11
          - os: ubuntu-16.04
            dpdk_version: dpdk-20.11
    steps:
    - uses: actions/checkout@v2
      with:
        path: libtrace
        submodules: recursive
    - name: Install Dependencies
      run: |
        sudo apt-get -y install meson build-essential python3-pyelftools flex bison
        sudo apt-get -y install libpcap0.8-dev libtool pkgconf wget m4 autoconf automake gcc libnuma-dev
    - name: Build DPDK ${{ matrix.dpdk_version }}
      run: cd libtrace/test; sudo ./do-test-build-dpdk.sh ${{ matrix.dpdk_version }}
    - name: Build Tests ${{ matrix.dpdk_version }}
      run: cd libtrace/test; make
    - name: Run DPDK tests ${{ matrix.dpdk_version }}
      run: cd libtrace/test; sudo ./do-test-build-dpdk-live.sh
