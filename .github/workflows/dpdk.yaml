name: DPDK Build
on:
  push:
    paths:
    - 'configure.in'
    - 'lib/format_dpdk.c'
    - 'lib/format_dpdk.h'
    - 'lib/dpdk_libtrace.mk'
    - 'lib/format_dpdkndag.c'
    - 'test/do-test-build-dpdk.sh'
    - 'test/do-test-build-dpdk-live.sh'
    - '.github/workflows/dpdk.yaml'
    - 'test/Makefile'
  pull_request:
    paths:
    - 'configure.in'
    - 'lib/format_dpdk.c'
    - 'lib/format_dpdk.h'
    - 'lib/dpdk_libtrace.mk'
    - 'lib/format_dpdkndag.c'
    - 'test/do-test-build-dpdk.sh'
    - 'test/do-test-build-dpdk-live.sh'
    - '.github/workflows/dpdk.yaml'
    - 'test/Makefile'
  workflow_dispatch:
jobs:
  build-dpdk:
    name: Build ${{ matrix.dpdk_version }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-18.04, ubuntu-16.04]
        dpdk_version: [dpdk-20.11, dpdk-20.02, dpdk-19.11.5, dpdk-18.11.10, dpdk-17.11.10, dpdk-16.11.11]
        meson_pip: [true]
        exclude:
          # Meson requires Python 3.6.0 or greater, ubuntu-16.04 python3=3.5.2
          - os: ubuntu-16.04
            dpdk_version: dpdk-20.11
        include:
          - os: ubuntu-16.04
            meson_pip: [false]
    steps:
    - name: Setup Enviroment Variables
      env:
        MESON_PIP: ${{ matrix.meson_pip }}
      run: echo MESON_PIP = $MESON_PIP
    - uses: actions/checkout@v2
      with:
        path: libtrace
        submodules: recursive
    - name: Setup hugepages
      run: |
        echo "1024" | sudo tee -a /sys/kernel/mm/hugepages/hugepages-2048kB/nr_hugepages
        echo "4" | sudo tee -a /sys/kernel/mm/hugepages/hugepages-1048576kB/nr_hugepages
        sudo mkdir /dev/hugepages1G
        sudo mkdir /dev/hugepages2M
        sudo mount -t hugetlbfs -o pagesize=1GB none /dev/hugepages1G
        sudo mount -t hugetlbfs -o pagesize=2M none /dev/hugepages2M
        sudo mount
    - name: Install dependencies
      run: |
        sudo apt-get -y install build-essential python3-pyelftools flex bison python3-pip python3-setuptools
        sudo apt-get -y install libpcap0.8-dev libtool pkgconf wget m4 autoconf automake gcc libnuma-dev
        if [ "$MESON_PIP" = true ]; then sudo pip3 install meson ninja; else sudo apt-get -y install meson ninja-build; fi
    - name: Install wandio
      run: |
        cd libtrace/wandio
        ./bootstrap.sh
        ./configure
        make
        sudo make install
        sudo ldconfig
    - name: Build ${{ matrix.dpdk_version }}
      run: cd libtrace/test; sudo ./do-test-build-dpdk.sh ${{ matrix.dpdk_version }}
    - name: Build tests ${{ matrix.dpdk_version }}
      run: cd libtrace/test; make dpdk DPDK_BUILD=DPDK_builds/${{ matrix.dpdk_version }}
    - name: Run tests ${{ matrix.dpdk_version }}
      run: cd libtrace/test; sudo ./do-test-build-dpdk-live.sh
